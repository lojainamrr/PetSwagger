{
	"info": {
		"_postman_id": "8dabd3d7-5429-426e-8f29-026435648b98",
		"name": "User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42332361"
	},
	"item": [
		{
			"name": "createUsersWithListInput",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
							"});\r",
							"\r",
							"function cleanString(str) {\r",
							"        return str.toString().trim().replace(/^\"|\"$/g, '').toLowerCase();\r",
							"    }\r",
							"let username = cleanString(pm.environment.get(\"Username\"));  \r",
							"pm.environment.set(\"GetUsername\",username);\r",
							"pm.environment.set(\"UpdateUsername\",username);\r",
							"pm.environment.set(\"DeletUsername\",username);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"id\": {{ID}},\r\n    \"username\": {{Username}},\r\n    \"firstName\": {{FirstName}},\r\n    \"lastName\": {{LastName}},\r\n    \"email\": {{Email}},\r\n    \"password\": {{Password}},\r\n    \"phone\": {{Phone}},\r\n    \"userStatus\": {{UserStatus}}\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/createWithList",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"createWithList"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/user/createWithList' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]'"
			},
			"response": []
		},
		{
			"name": "GetByUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function cleanString(str) {\r",
							"        return str.toString().trim().replace(/^\"|\"$/g, '').toLowerCase();\r",
							"    }\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"username\");\r",
							"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"password\");\r",
							"    pm.expect(pm.response.text()).to.include(\"phone\");\r",
							"    pm.expect(pm.response.text()).to.include(\"userStatus\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let ID = pm.environment.get(\"ID\");\r",
							"    pm.expect(jsonData.id.toString()).to.eql(ID);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test username\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let Username = cleanString(pm.environment.get(\"Username\"));\r",
							"    pm.expect((jsonData.username.toString())).to.eql(Username);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test FirstName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let FirstName = cleanString(pm.environment.get(\"FirstName\"));\r",
							"    pm.expect(cleanString(jsonData.firstName)).to.eql(FirstName);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test LastName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let LastName = cleanString(pm.environment.get(\"LastName\"));\r",
							"    pm.expect(cleanString(jsonData.lastName)).to.eql(LastName);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let Email = cleanString(pm.environment.get(\"Email\"));\r",
							"    pm.expect(cleanString(jsonData.email)).to.eql(Email);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let Password = cleanString(pm.environment.get(\"Password\"));\r",
							"    pm.expect(cleanString(jsonData.password)).to.eql(Password);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Phone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let Phone = cleanString(pm.environment.get(\"Phone\"));\r",
							"    pm.expect(cleanString(jsonData.phone)).to.eql(Phone);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test UserStatus\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let UserStatus = cleanString(pm.environment.get(\"UserStatus\"));\r",
							"    pm.expect(cleanString(jsonData.userStatus)).to.eql(UserStatus);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}/{{GetUsername}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"{{GetUsername}}"
					]
				},
				"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/user/string' \\\r\n  -H 'accept: application/json'"
			},
			"response": []
		},
		{
			"name": "UpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Your test message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let id=pm.environment.get(\"Up-Id\")\r",
							"    pm.expect(jsonData.message).to.eql(id);\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{Up-Id}},\r\n  \"username\": {{Up-Username}},\r\n  \"firstName\": {{Up-FirstName}},\r\n  \"lastName\": {{Up-LastName}},\r\n  \"email\": {{Up-Email}},\r\n\r\n  \"phone\": {{Up-Phone}},\r\n  \"userStatus\": {{Up-UserStatus}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/{{UpdateUsername}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"{{UpdateUsername}}"
					]
				},
				"description": "Generated from cURL: curl -X 'PUT' \\\r\n  'https://petstore.swagger.io/v2/user/string' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}'"
			},
			"response": []
		},
		{
			"name": "DeletUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function cleanString(str) {\r",
							"        return str.toString().trim().replace(/^\"|\"$/g, '').toLowerCase();\r",
							"    }\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"pm.test(\"Your test message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var username = cleanString(pm.environment.get(\"DeletUsername\"));\r",
							"    pm.expect(cleanString(jsonData.message)).to.eql(username);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}/{{DeletUsername}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"{{DeletUsername}}"
					]
				},
				"description": "Generated from cURL: curl -X 'DELETE' \\\r\n  'https://petstore.swagger.io/v2/user/string' \\\r\n  -H 'accept: application/json'"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contain(\"logged in user session:\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}/login?username={{LoginUsername}}&password={{LoginPassword}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{LoginUsername}}"
						},
						{
							"key": "password",
							"value": "{{LoginPassword}}"
						}
					]
				},
				"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/user/login?username=string&password=1234' \\\r\n  -H 'accept: application/json'"
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}/logout",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/user/logout' \\\r\n  -H 'accept: application/json'"
			},
			"response": []
		},
		{
			"name": "createUsersWithArrayInput",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  },\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/createWithArray",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"createWithArray"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/user/createWithArray' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '[\r\n  {\r\n    \"id\": 0,\r\n    \"username\": \"string\",\r\n    \"firstName\": \"string\",\r\n    \"lastName\": \"string\",\r\n    \"email\": \"string\",\r\n    \"password\": \"string\",\r\n    \"phone\": \"string\",\r\n    \"userStatus\": 0\r\n  }\r\n]'"
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"    pm.expect(pm.response.text()).to.include(\"type\");\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"});\r",
							"pm.test(\"Your test code\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/user' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"id\": 0,\r\n  \"username\": \"string\",\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"userStatus\": 0\r\n}'"
			},
			"response": []
		}
	]
}